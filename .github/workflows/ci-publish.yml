name: Build with Maven, Publish Docker to GHCR

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/api-login-users

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: ''

      # Build inside the subfolder if your project is in API_Login_Users,
      # otherwise use mvn -B clean package -DskipTests
      - name: Build with Maven (produce target/*.jar)
        run: mvn -B -f API_Login_Users/pom.xml clean package -DskipTests

      - name: Detect built JAR
        id: detect_jar
        run: |
          set -e
          JAR_PATH=$(ls API_Login_Users/target/*.jar | head -n 1)
          echo "Detected JAR: $JAR_PATH"
          echo "JAR_FILE=$JAR_PATH" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./API_Login_Users
          file: ./API_Login_Users/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}